; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = meshtastic-diy-v1

[common]

[env]
extra_scripts = bin/platformio-custom.py
build_flags = 
	-Wno-missing-field-initializers
	-Wno-format
	-Isrc -Isrc/mesh -Isrc/gps -Isrc/buzz -Wl,-Map,.pio/build/output.map
	-DHW_VERSION_${sysenv.COUNTRY}
	-DHW_VERSION=${sysenv.HW_VERSION}
	-DUSE_THREAD_NAMES
	-DTINYGPS_OPTION_NO_CUSTOM_FIELDS
monitor_speed = 921600
debug_tool = jlink
lib_deps = 
	https://github.com/meshtastic/esp8266-oled-ssd1306.git#35d796226b853b0c0ff818b2f1aa3d35e7296a96
	https://github.com/meshtastic/OneButton.git#3bcba9492d01e2a8a86f46700ab16f96dd2cf1f5
	1202
	https://github.com/meshtastic/arduino-fsm.git
	https://github.com/meshtastic/SparkFun_Ublox_Arduino_Library.git#31015a55e630a2df77d9d714669c621a5bf355ad
	https://github.com/meshtastic/RadioLib.git#5582ac30578ff3f53f20630a00b2a8a4b8f92c74
	https://github.com/meshtastic/TinyGPSPlus.git#f0f47067ef2f67c856475933188251c1ef615e79
	https://github.com/meshtastic/AXP202X_Library.git#8404abb6d4b486748636bc6ad72d2a47baaf5460
	Wire
	SPI
	https://github.com/geeksville/ArduinoThread.git#72921ac222eed6f526ba1682023cee290d9aa1b3
	PubSubClient

[arduino_base]
framework = arduino
lib_deps = 
	${env.lib_deps}
build_flags = ${env.build_flags} -Os
src_filter = ${env.src_filter} -<portduino/>

[esp32_base]
extends = arduino_base
platform = espressif32
src_filter = 
	${arduino_base.src_filter} -<nrf52/>
upload_speed = 921600
debug_init_break = tbreak setup
build_flags = 
	${arduino_base.build_flags} -Wall -Wextra -Isrc/esp32 -Isrc/esp32-mfix-esp32-psram-cache-issue -lnimble -std=c++11
	-DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
	-DAXP_DEBUG_PORT=Serial
lib_deps = 
	${arduino_base.lib_deps}
	https://github.com/meshtastic/esp32_https_server.git
	adafruit/DHT sensor library@^1.4.1
	adafruit/Adafruit Unified Sensor@^1.1.4
	paulstoffregen/OneWire@^2.3.5
	robtillaart/DS18B20@^0.1.11
	h2zero/NimBLE-Arduino@1.3.1
lib_ignore = 
	segger_rtt
	ESP32 BLE Arduino
platform_packages = 
	framework-arduinoespressif32@https://github.com/meshtastic/arduino-esp32.git#4cde0f5d412d2695184f32e8a47e9bea57b45276
upload_port = /dev/ttyACM1
board_build.partitions = partition-table.csv

[env:tbeam]
extends = esp32_base
board = ttgo-t-beam
lib_deps = ${esp32_base.lib_deps}
build_flags = ${esp32_base.build_flags} -D TBEAM_V10

[env:tbeam0.7]
extends = esp32_base
board = ttgo-t-beam
build_flags = ${esp32_base.build_flags} -D TBEAM_V07

[env:heltec-v2.0]
extends = esp32_base
board = heltec_wifi_lora_32_V2
build_flags = ${esp32_base.build_flags} -D HELTEC_V2_0

[env:heltec-v2.1]
extends = esp32_base
board = heltec_wifi_lora_32_V2
build_flags = ${esp32_base.build_flags} -D HELTEC_V2_1

[env:tlora-v1]
extends = esp32_base
board = ttgo-lora32-v1
build_flags = ${esp32_base.build_flags} -D TLORA_V1

[env:tlora_v1_3]
extends = esp32_base
board = ttgo-lora32-v1
build_flags = ${esp32_base.build_flags} -D TLORA_V1_3

[env:tlora-v2]
extends = esp32_base
board = ttgo-lora32-v1
build_flags = ${esp32_base.build_flags} -D TLORA_V2

[env:tlora-v2-1-1.6]
extends = esp32_base
board = ttgo-lora32-v1
build_flags = ${esp32_base.build_flags} -D TLORA_V2_1_16

[env:meshtastic-diy-v1]
extends = esp32_base
board = esp32doit-devkit-v1
build_flags = 
	${esp32_base.build_flags}
	-D DIY_V1
	-D EBYTE_E22

[nrf52_base]
platform = https://github.com/meshtastic/platform-nordicnrf52.git#merge
extends = arduino_base
build_type = debug
build_flags = 
	${arduino_base.build_flags} -Wno-unused-variable
	-Isrc/nrf52
	-Isdk-nrfxlib/crypto/nrf_oberon/include -Lsdk-nrfxlib/crypto/nrf_oberon/lib/cortex-m4/hard-float/ -lliboberon_3.0.7
src_filter = 
	${arduino_base.src_filter} -<esp32/> -<nimble/> -<mesh/wifi/> -<mesh/http/> -<plugins/esp32> -<mqtt/>
lib_ignore = 
	BluetoothOTA
debug_port = :2331
disabled_debug_server = 
	/usr/bin/JLinkGDBServerCLExe
	-singlerun
	-if
	SWD
	-select
	USB
	-device
	nRF52840_xxAA
	-port
	2331
	-rtos
	GDBServer/RTOSPlugin_FreeRTOS
debug_extra_cmds = 
	source gdbinit
debug_init_break = 

[nrf52840_base]
extends = nrf52_base
build_flags = ${nrf52_base.build_flags}
lib_deps = 
	${arduino_base.lib_deps}
	Adafruit nRFCrypto

[env:lora_isp4520]
extends = nrf52_base
board = lora_isp4520
build_flags = ${nrf52_base.build_flags} -Ivariants/lora_isp4520
src_filter = ${nrf52_base.src_filter} +<../variants/lora_isp4520> -<graphics> -<gps> +<gps/GPS.cpp> +<gps/RTC.cpp>
lib_ignore = 
	${nrf52_base.lib_ignore}
	ESP8266_SSD1306
	SparkFun Ublox Arduino Library
	AXP202X_Library
	TinyGPSPlus
upload_protocol = jlink
monitor_port = /dev/ttyUSB0

[env:nrf52840dk]
extends = nrf52840_base
board = nrf52840_dk

[env:nrf52840dk-geeksville]
extends = nrf52840_base
board = nrf52840_dk_modified
build_flags = ${nrf52_base.build_flags} -Ivariants/pca10056-rc-clock
src_filter = ${nrf52_base.src_filter} +<../variants/pca10056-rc-clock>

[env:feather_nrf52832]
extends = nrf52_base
board = adafruit_feather_nrf52832

[env:rak815]
extends = nrf52_base
board = rak815
debug_tool = jlink
upload_protocol = jlink
monitor_port = /dev/ttyUSB0
monitor_speed = 115200

[env:rak4631_5005]
extends = nrf52840_base
board = wiscore_rak4631
build_flags = ${nrf52840_base.build_flags} -Ivariants/WisCore_RAK4631_Board -D RAK_BASE_5005
src_filter = ${nrf52_base.src_filter} +<../variants/WisCore_RAK4631_Board>
debug_tool = jlink

[env:rak4631_19003]
extends = nrf52840_base
board = wiscore_rak4631
build_flags = ${nrf52840_base.build_flags} -Ivariants/WisCore_RAK4631_Board -D RAK_BASE_19003
src_filter = ${nrf52_base.src_filter} +<../variants/WisCore_RAK4631_Board>
debug_tool = jlink

[env:rak4600]
extends = nrf52_base
board = wiscore_rak4600
build_flags = ${nrf52_base.build_flags} -Ivariants/WisCore_RAK4600_Board
src_filter = ${nrf52_base.src_filter} +<../variants/WisCore_RAK4600_Board>
lib_deps = ${arduino_base.lib_deps}

[env:ppr]
extends = nrf52_base
board = ppr
lib_deps = 
	${arduino_base.lib_deps}
	UC1701

[env:ppr1]
extends = nrf52_base
board = ppr1
build_flags = ${nrf52_base.build_flags} -Ivariants/ppr1
src_filter = ${nrf52_base.src_filter} +<../variants/ppr1>
lib_deps = ${arduino_base.lib_deps}

[env:t-echo]
extends = nrf52840_base
board = t-echo
debug_tool = jlink
upload_protocol = jlink
build_flags = ${nrf52840_base.build_flags} -Ivariants/t-echo
src_filter = ${nrf52_base.src_filter} +<../variants/t-echo>
lib_deps = 
	${nrf52840_base.lib_deps}
	https://github.com/geeksville/GxEPD2.git
	adafruit/Adafruit BusIO

[env:lora-relay-v1]
extends = nrf52840_base
board = lora-relay-v1
build_flags = 
	${nrf52840_base.build_flags} -Ivariants/lora_relay_v1
	-DUSER_SETUP_LOADED
	-DTFT_WIDTH=80
	-DTFT_HEIGHT=160
	-DST7735_GREENTAB160x80
	-DST7735_DRIVER
	-DTFT_CS=ST7735_CS
	-DTFT_DC=ST7735_RS
	-DTFT_RST=ST7735_RESET
	-DSPI_FREQUENCY=27000000
src_filter = ${nrf52_base.src_filter} +<../variants/lora_relay_v1>
lib_deps = 
	${nrf52840_base.lib_deps}
	SparkFun BQ27441 LiPo Fuel Gauge Arduino Library
	TFT_eSPI

[env:lora-relay-v2]
extends = nrf52840_base
board = lora-relay-v2
build_flags = 
	${nrf52840_base.build_flags} -Ivariants/lora_relay_v2
	-DUSER_SETUP_LOADED
	-DTFT_WIDTH=80
	-DTFT_HEIGHT=160
	-DST7735_GREENTAB160x80
	-DST7735_DRIVER
	-DTFT_CS=ST7735_CS
	-DTFT_DC=ST7735_RS
	-DTFT_RST=ST7735_RESET
	-DSPI_FREQUENCY=27000000
	-DTFT_WR=ST7735_SDA
	-DTFT_SCLK=ST7735_SCK
src_filter = ${nrf52_base.src_filter} +<../variants/lora_relay_v2>
lib_deps = 
	${nrf52840_base.lib_deps}
	SparkFun BQ27441 LiPo Fuel Gauge Arduino Library
	TFT_eSPI

[env:native]
platform = https://github.com/geeksville/platform-native.git
src_filter = ${env.src_filter} -<esp32/> -<nimble/> -<nrf52/> -<mesh/http/> -<plugins/esp32>
build_flags = ${arduino_base.build_flags} -O0
framework = arduino
board = cross_platform
lib_deps = 
	${arduino_base.lib_deps}
	rweather/Crypto

[env:linux]
platform = https://github.com/geeksville/platform-native.git
src_filter = ${env.src_filter} -<esp32/> -<nimble/> -<nrf52/> -<mesh/http/> -<plugins/esp32>
build_flags = ${arduino_base.build_flags} -O0 -lgpiod
framework = arduino
board = linux_hardware
lib_deps = 
	${arduino_base.lib_deps}
	rweather/Crypto
